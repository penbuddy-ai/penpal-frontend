name: Build & Push (service) + Coolify Deploy

on:
  push:
    branches: [ main, develop ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    env:
      REGISTRY: ghcr.io
      OWNER: ${{ github.repository_owner }}
      IMAGE_NAME: ${{ github.event.repository.name }}
      REF_SLUG: ${{ github.ref_name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: MaksymilianCzadowski
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Compute tags
        id: tags
        run: |
          BRANCH_TAG="${REF_SLUG}-latest"
          SHA_TAG="sha-${GITHUB_SHA::7}"
          echo "branch_tag=${BRANCH_TAG}" >> $GITHUB_OUTPUT
          echo "sha_tag=${SHA_TAG}" >> $GITHUB_OUTPUT

      - name: Build & push image (staging)
        if: github.ref_name == 'develop'
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          build-args: |
            NEXT_PUBLIC_AUTH_SERVICE_URL=${{ vars.NEXT_PUBLIC_AUTH_SERVICE_URL_STAGING }}
            NEXT_PUBLIC_AI_SERVICE_URL=${{ vars.NEXT_PUBLIC_AI_SERVICE_URL_STAGING }}
            NEXT_PUBLIC_PAYMENT_API_URL=${{ vars.NEXT_PUBLIC_PAYMENT_API_URL_STAGING }}
            NEXT_PUBLIC_MONITORING_API_URL=${{ vars.NEXT_PUBLIC_MONITORING_API_URL_STAGING }}
            NEXT_PUBLIC_AI_API_KEY=${{ secrets.NEXT_PUBLIC_AI_API_KEY_STAGING }}
            NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=${{ secrets.NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY_STAGING }}
          tags: |
            ghcr.io/${{ env.OWNER }}/${{ env.IMAGE_NAME }}:${{ steps.tags.outputs.branch_tag }}
            ghcr.io/${{ env.OWNER }}/${{ env.IMAGE_NAME }}:${{ steps.tags.outputs.sha_tag }}

      - name: Build & push image (production)
        if: github.ref_name == 'main'
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          build-args: |
            NEXT_PUBLIC_AUTH_SERVICE_URL=${{ vars.NEXT_PUBLIC_AUTH_SERVICE_URL_PROD }}
            NEXT_PUBLIC_AI_SERVICE_URL=${{ vars.NEXT_PUBLIC_AI_SERVICE_URL_PROD }}
            NEXT_PUBLIC_PAYMENT_API_URL=${{ vars.NEXT_PUBLIC_PAYMENT_API_URL_PROD }}
            NEXT_PUBLIC_MONITORING_API_URL=${{ vars.NEXT_PUBLIC_MONITORING_API_URL_PROD }}
            NEXT_PUBLIC_AI_API_KEY=${{ secrets.NEXT_PUBLIC_AI_API_KEY_PROD }}
            NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=${{ secrets.NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY_PROD }}
          tags: |
            ghcr.io/${{ env.OWNER }}/${{ env.IMAGE_NAME }}:${{ steps.tags.outputs.branch_tag }}
            ghcr.io/${{ env.OWNER }}/${{ env.IMAGE_NAME }}:${{ steps.tags.outputs.sha_tag }}

      # - name: Trigger Coolify deploy (staging)
      #   if: github.ref_name == 'develop'
      #   run: |
      #     curl -fsSL -X POST \
      #       -H "Authorization: Bearer ${{ secrets.COOLIFY_API_TOKEN }}" \
      #       "${{ secrets.COOLIFY_STAGING_WEBHOOK_URL }}"

      # - name: Trigger Coolify deploy (production)
      #   if: github.ref_name == 'main'
      #   run: |
      #     curl -fsSL -X POST \
      #       -H "Authorization: Bearer ${{ secrets.COOLIFY_API_TOKEN }}" \
      #       "${{ secrets.COOLIFY_PROD_WEBHOOK_URL }}"

